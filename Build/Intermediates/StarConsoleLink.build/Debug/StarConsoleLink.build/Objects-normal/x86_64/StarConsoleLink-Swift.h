// Generated by Apple Swift version 3.1 (swiftlang-802.0.51 clang-802.0.41)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if defined(__has_attribute) && __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import AppKit;
@import CoreGraphics;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class NSColor;

SWIFT_CLASS("_TtC15StarConsoleLink17ConsoleLinkConfig")
@interface ConsoleLinkConfig : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ConsoleLinkConfig * _Nonnull shared;)
+ (ConsoleLinkConfig * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setConfig:(id _Nonnull)config forKey:(NSString * _Nonnull)key;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL consoleLinkEnabled;)
+ (BOOL)consoleLinkEnabled SWIFT_WARN_UNUSED_RESULT;
+ (void)setConsoleLinkEnabled:(BOOL)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL ChineseUnicodeEnabled;)
+ (BOOL)ChineseUnicodeEnabled SWIFT_WARN_UNUSED_RESULT;
+ (void)setChineseUnicodeEnabled:(BOOL)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NSColor * _Nonnull linkColor;)
+ (NSColor * _Nonnull)linkColor SWIFT_WARN_UNUSED_RESULT;
+ (void)setLinkColor:(NSColor * _Nonnull)newValue;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface ConsoleLinkConfig (SWIFT_EXTENSION(StarConsoleLink))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NSColor * _Nonnull successLogColor;)
+ (NSColor * _Nonnull)successLogColor SWIFT_WARN_UNUSED_RESULT;
+ (void)setSuccessLogColor:(NSColor * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NSColor * _Nonnull failureLogColor;)
+ (NSColor * _Nonnull)failureLogColor SWIFT_WARN_UNUSED_RESULT;
+ (void)setFailureLogColor:(NSColor * _Nonnull)newValue;
@end


@interface ConsoleLinkConfig (SWIFT_EXTENSION(StarConsoleLink))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull debugLogKeyword;)
+ (NSString * _Nonnull)debugLogKeyword SWIFT_WARN_UNUSED_RESULT;
+ (void)setDebugLogKeyword:(NSString * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull infoLogKeyword;)
+ (NSString * _Nonnull)infoLogKeyword SWIFT_WARN_UNUSED_RESULT;
+ (void)setInfoLogKeyword:(NSString * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull warningLogKeyword;)
+ (NSString * _Nonnull)warningLogKeyword SWIFT_WARN_UNUSED_RESULT;
+ (void)setWarningLogKeyword:(NSString * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull errorLogKeyword;)
+ (NSString * _Nonnull)errorLogKeyword SWIFT_WARN_UNUSED_RESULT;
+ (void)setErrorLogKeyword:(NSString * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NSColor * _Nonnull debugLogColor;)
+ (NSColor * _Nonnull)debugLogColor SWIFT_WARN_UNUSED_RESULT;
+ (void)setDebugLogColor:(NSColor * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NSColor * _Nonnull infoLogColor;)
+ (NSColor * _Nonnull)infoLogColor SWIFT_WARN_UNUSED_RESULT;
+ (void)setInfoLogColor:(NSColor * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NSColor * _Nonnull warningLogColor;)
+ (NSColor * _Nonnull)warningLogColor SWIFT_WARN_UNUSED_RESULT;
+ (void)setWarningLogColor:(NSColor * _Nonnull)newValue;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NSColor * _Nonnull errorLogColor;)
+ (NSColor * _Nonnull)errorLogColor SWIFT_WARN_UNUSED_RESULT;
+ (void)setErrorLogColor:(NSColor * _Nonnull)newValue;
@end


@interface NSColor (SWIFT_EXTENSION(StarConsoleLink))
- (nonnull instancetype)initWithR:(NSInteger)r g:(NSInteger)g b:(NSInteger)b a:(CGFloat)a;
- (nonnull instancetype)initWithRgb:(NSInteger)rgb;
/// alpha range: 0 - 1.0
- (nonnull instancetype)initWithRgb:(NSInteger)rgb alpha:(CGFloat)alpha;
- (nonnull instancetype)initWithRgba:(NSInteger)rgba;
+ (NSColor * _Nonnull)rgb:(NSInteger)rgb SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSInteger rgb;
@end

@class NSBundle;

@interface NSObject (SWIFT_EXTENSION(StarConsoleLink))
+ (void)pluginDidLoad:(NSBundle * _Nonnull)bundle;
@end

@class NSFont;

@interface NSString (SWIFT_EXTENSION(StarConsoleLink))
@property (nonatomic, readonly, copy) NSString * _Nonnull swiftString;
- (CGSize)sizeWithFont:(NSFont * _Nonnull)font maxSize:(CGSize)maxSize SWIFT_WARN_UNUSED_RESULT;
@end


@interface NSTextStorage (SWIFT_EXTENSION(StarConsoleLink))
@property (nonatomic) BOOL usedInConsole;
- (void)star_fixAttributesInRange:(NSRange)range;
@end

@class NSEvent;

@interface NSTextView (SWIFT_EXTENSION(StarConsoleLink))
- (void)star_mouseDown:(NSEvent * _Nonnull)theEvent;
- (void)star_insertNewline:(id _Nonnull)arg1;
- (void)star_clearConsoleItems;
- (BOOL)star_shouldChangeTextInRanges:(id _Nonnull)ranges replacementStrings:(id _Nonnull)strings SWIFT_WARN_UNUSED_RESULT;
- (void)star_checkTextView;
@end

@class NSView;

SWIFT_CLASS("_TtC15StarConsoleLink12PluginHelper")
@interface PluginHelper : NSObject
+ (NSString * _Nullable)runShellCommand:(NSString * _Nonnull)launchPath arguments:(NSArray<NSString *> * _Nonnull)arguments SWIFT_WARN_UNUSED_RESULT;
+ (NSView * _Nullable)getViewByClassName:(NSString * _Nonnull)name inContainer:(NSView * _Nonnull)container SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSWindow;

@interface PluginHelper (SWIFT_EXTENSION(StarConsoleLink))
+ (NSString * _Nullable)workspacePath SWIFT_WARN_UNUSED_RESULT;
+ (NSTextView * _Nullable)editorTextViewInWindow:(NSWindow * _Nullable)window SWIFT_WARN_UNUSED_RESULT;
+ (NSTextView * _Nullable)consoleTextViewInWindow:(NSWindow * _Nullable)window SWIFT_WARN_UNUSED_RESULT;
@end

@class NSColorWell;
@class NSTextField;
@class NSCoder;

/// 开发中 未完成 以后颜色由Xcode配置，不再由代码配
SWIFT_CLASS("_TtC15StarConsoleLink24SettingsWindowController")
@interface SettingsWindowController : NSWindowController
@property (nonatomic, strong) NSBundle * _Null_unspecified bundle;
@property (nonatomic, weak) IBOutlet NSColorWell * _Null_unspecified linkColorWell;
@property (nonatomic, weak) IBOutlet NSTextField * _Null_unspecified debugLogKeywordTextField;
@property (nonatomic, weak) IBOutlet NSTextField * _Null_unspecified infoLogKeywordTextField;
@property (nonatomic, weak) IBOutlet NSTextField * _Null_unspecified warningLogKeywordTextField;
@property (nonatomic, weak) IBOutlet NSTextField * _Null_unspecified errorLogKeywordTextField;
@property (nonatomic, weak) IBOutlet NSTextField * _Null_unspecified successLogKeywordTextField;
@property (nonatomic, weak) IBOutlet NSTextField * _Null_unspecified failureLogKeywordTextField;
@property (nonatomic, weak) IBOutlet NSTextField * _Null_unspecified assertLogKeywordTextField;
@property (nonatomic, weak) IBOutlet NSTextField * _Null_unspecified fatalLogKeywordTextField;
@property (nonatomic, weak) IBOutlet NSColorWell * _Null_unspecified debugLogColorWell;
@property (nonatomic, weak) IBOutlet NSColorWell * _Null_unspecified infoLogColorWell;
@property (nonatomic, weak) IBOutlet NSColorWell * _Null_unspecified warningLogColorWell;
@property (nonatomic, weak) IBOutlet NSColorWell * _Null_unspecified errorLogColorWell;
@property (nonatomic, weak) IBOutlet NSColorWell * _Null_unspecified successLogColorWell;
@property (nonatomic, weak) IBOutlet NSColorWell * _Null_unspecified failureLogColorWell;
@property (nonatomic, weak) IBOutlet NSColorWell * _Null_unspecified assertLogColorWell;
@property (nonatomic, weak) IBOutlet NSColorWell * _Null_unspecified fatalLogColorWell;
- (void)windowDidLoad;
- (void)loadConfig;
- (IBAction)handleKeywordChanged:(NSTextField * _Nonnull)sender;
- (IBAction)handleColorChanged:(NSColorWell * _Nonnull)sender;
- (nonnull instancetype)initWithWindow:(NSWindow * _Nullable)window OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSNotificationCenter;
@class NSMenuItem;

SWIFT_CLASS("_TtC15StarConsoleLink15StarConsoleLink")
@interface StarConsoleLink : NSObject <NSTextStorageDelegate>
+ (void)initialize;
+ (void)swizzleConsoleTextViewMethods;
@property (nonatomic, strong) NSBundle * _Nonnull bundle;
@property (nonatomic, strong) NSNotificationCenter * _Nonnull notificationCenter;
- (nonnull instancetype)initWithBundle:(NSBundle * _Nonnull)bundle OBJC_DESIGNATED_INITIALIZER;
- (void)addStarConsoleLinkObserver;
- (void)handleFinishLaunchingNotification:(NSNotification * _Nonnull)notification;
- (void)handleControlGroupDidChangeNotification:(NSNotification * _Nonnull)notification;
- (void)handleTextStorageDidChange:(NSNotification * _Nonnull)notification;
- (void)textStorage:(NSTextStorage * _Nonnull)textStorage willProcessEditing:(NSTextStorageEditActions)editedMask range:(NSRange)editedRange changeInLength:(NSInteger)delta;
@property (nonatomic, strong) NSMenuItem * _Null_unspecified pluginsMenuItem;
@property (nonatomic, strong) NSMenuItem * _Null_unspecified starConsoleLinkItem;
@property (nonatomic, strong) NSMenuItem * _Null_unspecified consoleLinkEnabledItem;
@property (nonatomic, strong) NSMenuItem * _Null_unspecified ChineseUnicodeEnabledItem;
@property (nonatomic, strong) NSMenuItem * _Null_unspecified showSettingsItem;
- (void)createMenuItems;
- (void)createMainMenuItem;
- (void)createStarConsoleLinkItem;
- (void)createConsoleLinkEnabledItem;
- (void)createChineseUnicodeEnabledItem;
- (void)createSettingsItem;
- (void)handleConsoleLinkEnabled:(NSMenuItem * _Nonnull)item;
- (void)handleChineseUnicodeEnabled:(NSMenuItem * _Nonnull)item;
@property (nonatomic, strong) SettingsWindowController * _Null_unspecified settingsWindowController;
- (void)handleShowSettingsItem:(NSMenuItem * _Nonnull)item;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

#pragma clang diagnostic pop
